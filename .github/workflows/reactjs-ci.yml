name: Reactjs CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  K8S_NAMESPACE: reactjs-boardgames
  K8S_SERVICE_NAME: reactjs-boardgames-service
  APP_NAME: reactjs-boardgames 
  WORKING_DIR: reactjs-boardgames
  PORT: 8282

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      APP_NAME: ${{ env.APP_NAME }}
      WORKING_DIR: ${{ env.WORKING_DIR }}
      K8S_NAMESPACE: ${{ env.K8S_NAMESPACE }}
      K8S_SERVICE_NAME: ${{ env.K8S_SERVICE_NAME }}
      PORT: ${{ env.PORT }}
      TIMESTAMP: ${{ steps.set-timestamp.outputs.timestamp }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install
      working-directory: ./reactjs-boardgames

    - name: Build the project
      run: npm run build``
      working-directory: ./reactjs-boardgames

    - name: Run tests
      run: npm test
      working-directory: ./reactjs-boardgames

  call-build-image-push:
        uses: david-gimelle/lab/.github/workflows/build-image-push-to-ghcr.yml@main
        needs: build
        
        with:
          APP_NAME: ${{ needs.build.outputs.APP_NAME }}
          WORKING_DIR: ${{ needs.build.outputs.WORKING_DIR }}
          timestamp: ${{ needs.build.outputs.TIMESTAMP }}
        secrets:
          GHCR_PAT: ${{ secrets.GHCR_PAT }}   
          
   #add a job to deploy this image to AKS
  deploy:
    runs-on: ubuntu-latest
    needs: call-build-image-push
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up kubectl
      uses: azure/k8s-set-context@v1
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
        context: ${{ secrets.KUBE_CONTEXT }}

    - name: Create Image Pull Secret
      run: |
          kubectl create secret docker-registry ghcr-secret \
            --docker-server=ghcr.io \
            --docker-username=${{ secrets.GHCR_USERNAME }} \
            --docker-password=${{ secrets.GHCR_PAT }} \
            --namespace=${{ needs.build.outputs.K8S_NAMESPACE }} \
            --dry-run=client -o yaml | kubectl apply -f -
  
    - name: Deploy to AKS
      run: |
          # Update deployment with new image (fix: remove line break)
          kubectl set image deployment/${{ needs.build.outputs.APP_NAME }} ${{ needs.build.outputs.APP_NAME }}=ghcr.io/${{ secrets.GHCR_USERNAME }}/${{ needs.build.outputs.APP_NAME }}:${{ needs.build.outputs.TIMESTAMP }} -n ${{ needs.build.outputs.K8S_NAMESPACE }}
          # Patch deployment to use image pull secret
          kubectl patch deployment ${{ needs.build.outputs.APP_NAME }} -n ${{ needs.build.outputs.K8S_NAMESPACE }} --patch '{"spec": {"template": {"spec": {"imagePullSecrets": [{"name": "ghcr-secret"}]}}}}'
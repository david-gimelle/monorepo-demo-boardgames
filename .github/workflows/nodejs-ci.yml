name: Node.js CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  K8S_NAMESPACE: nodejs-boardgames-api
  K8S_SERVICE_NAME: nodejs-boardgames-api-service
  APP_NAME: nodejs-boardgames-api 
  WORKING_DIR: nodejs-boardgames-api 
  PORT: 8282

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      APP_NAME: ${{ env.APP_NAME }}
      WORKING_DIR: ${{ env.WORKING_DIR }}
      K8S_NAMESPACE: ${{ env.K8S_NAMESPACE }}
      K8S_SERVICE_NAME: ${{ env.K8S_SERVICE_NAME }}
      PORT: ${{ env.PORT }}


    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16'

    - name: Install dependencies
      run: npm install
      working-directory: ./${{ env.WORKING_DIR }}

    - name: Build the project
      run: npm run build
      working-directory: ./${{ env.WORKING_DIR }}

    - name: Run tests
      run: npm test
      working-directory: ./${{ env.WORKING_DIR }}

  call-build-image-push:
        uses: david-gimelle/lab/.github/workflows/build-image-push-to-ghcr.yml@main
        needs: build
        
        with:
          APP_NAME: ${{ needs.build.outputs.APP_NAME }}
          WORKING_DIR: ${{ needs.build.outputs.WORKING_DIR }}
        secrets:
          GHCR_PAT: ${{ secrets.GHCR_PAT }}


  deploy-webservice-to-gke:
        uses: david-gimelle/lab/.github/workflows/deploy-web-service-to-gke.yml@main
        needs: [build, call-build-image-push]
      
        with:
          k8s_namespace: ${{ needs.build.outputs.K8S_NAMESPACE }}
          k8s_service_name: ${{ needs.build.outputs.K8S_SERVICE_NAME }}
          app_name: ${{ needs.build.outputs.APP_NAME }}
          gke_cluster_name: ${{ vars.GKE_CLUSTER_NAME_PYTHON }}
          gke_cluster_zone: ${{ vars.GKE_CLUSTER_ZONE }}
          gcp_project_id: ${{ vars.GCP_PROJECT_ID }}
          port: ${{ needs.build.outputs.PORT }}
        secrets:    
          ghcr_pat: ${{ secrets.GHCR_PAT }}
          gcp_sa_key: ${{ secrets.GCP_SA_KEY }}